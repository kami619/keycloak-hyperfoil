name: keycloak-poc
http:
  host: http://localhost:8080
  sharedConnections: 10
phases:
- steadyState:
    constantRate:
      startAfter: rampUp
      usersPerSec: 0.3
      duration: 1m
      maxSessions: 6
    #atOnce:
    #  users: 1
      scenario: &loginUsernamePassword
          - openLandingPage:
            - randomUUID:
                toVar: uuid
            - randomInt: realmIndex <- 0 .. 9
            - randomInt: clientIndex <- 0 .. 9
            - set: scope <- openid profile
            - template: 
                pattern: localhost:8080/auth/realms/realm-${realmIndex}/account/
                toVar: redirectUri
            - httpRequest:
                GET: /auth/realms/realm-${realmIndex}/protocol/openid-connect/auth?login=true&response_type=code&client_id=client-${clientIndex}&state=${uuid}&redirect_uri=${redirectUri}&scope=${scope}
                headers: &uiHeaders
                  Accept : text/html,application/xhtml+xml,application/xml
                  Accept-Encoding : gzip, deflate
                  Accept-Language : en-US,en;q=0.5
                  User-Agent : Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:16.0) Gecko/20100101 Firefox/16.0
                handler:
                  status:
                    range: 200
                  body:
                    parseHtml:
                      onTagAttribute:
                        tag: FORM
                        attribute: action
                        toVar: login-form-uri
            #- thinkTime: 5s
            # - log: #debug log
            #     message: 'Login Form URI after clean up is ${replace/&amp;/\&/g:login-form-uri}'
          - submitLogin:
            - randomInt:
                min: 1
                max: 100
                toVar: userIndex
            - httpRequest:
                POST: ${replace/&amp;/\&/g:login-form-uri}
                body:
                  form:
                  - name: username
                    pattern: user-${userIndex}
                  - name: password
                    pattern: user-${userIndex}-password
                  - name: login
                    pattern: "Log in"
                headers: *uiHeaders
                handler:
                  status:
                    range: 302
                  header:
                    filter:
                      header:
                        value: location
                      processor:
                        store: login-redirect
            - log: #debug log
                message: 'login-redirect var value is : ${login-redirect}'
            - thinkTime: 5s
          - logout:
            - httpRequest:
                GET: /auth/realms/realm-${realmIndex}/protocol/openid-connect/logout?redirect_uri=${redirectUri}
                headers: *uiHeaders
                handler:
                  status:
                    range: 302
                  header:
                    filter:
                      header:
                        value: location
                      processor:
                        store: redirectUri
            - log: #debug log
                message: 'redirectUri var value is : ${redirectUri}'

- smokeTest:
    atOnce:
      users: 1
      scenario: *loginUsernamePassword
      
- rampUp:
    increasingRate:
      startAfter: smokeTest
      initialUsersPerSec: 0.1
      targetUsersPerSec: 0.3
      duration: 30s
      maxSessions: 8
      scenario: *loginUsernamePassword
- rampDown:
    decreasingRate:
      startAfter: steadyState
      initialUsersPerSec: 0.2
      targetUsersPerSec: 0.1
      duration: 30s
      maxSessions: 4
      scenario: *loginUsernamePassword